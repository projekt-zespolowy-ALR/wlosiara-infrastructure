name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

env:
  SETUP_NODE_NODE_VERSION: 19.7
  SETUP_HELM_HELM_VERSION: v3.11.2

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Install dependencies
        run: |
          npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release -- --verbose --increment=${{ github.event.inputs.release_type }} --ci
      - name: Remember release version
        id: remember_release_version
        run: |
          echo "release_version=$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT
    outputs:
      release_version: ${{ steps.remember_release_version.outputs.release_version }}

  publish_helm_chart_to_chartmuseum:
    name: Publish Helm chart to ChartMuseum
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1.7
        with:
          tag: ${{ needs.release.outputs.release_version }}
          tarBall: true
      - name: Unpack release
        run: tar -xzf ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Remove tarball
        run: rm ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Move the files to the current directory
        run: |
          shopt -s dotglob
          mv ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/* ./
          shopt -u dotglob
          rm -rf ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Install push-cm plugin for Helm
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push
      - name: Add ChartMuseum repository
        run: |
          helm repo add wlosiara-pl-chartmuseum ${{ secrets.CHARTMUSEUM_URL }}
      - name: Publish Helm chart to ChartMuseum
        run: |
          helm cm-push helm/ wlosiara-pl-chartmuseum --username=${{ secrets.CHARTMUSEUM_USERNAME }} --password=${{ secrets.CHARTMUSEUM_PASSWORD }}
    outputs:
      chart_version: ${{ needs.release.outputs.release_version }}
  deploy_helm_chart_to_kubernetes:
    name: Deploy Helm chart to Kubernetes
    needs: [publish_helm_chart_to_chartmuseum]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Setup .kube/config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
      - name: Add ChartMuseum repository
        run: |
          helm repo add wlosiara-pl-chartmuseum ${{ secrets.CHARTMUSEUM_URL }}
      - name: Deploy Helm chart to Kubernetes
        run: |
          helm upgrade --install ${{ github.event.repository.name }} wlosiara-pl-chartmuseum/${{ github.event.repository.name }} --version=${{ needs.publish_helm_chart_to_chartmuseum.outputs.chart_version }} --namespace=default --repo=${{ secrets.CHARTMUSEUM_URL }} --username ${{ secrets.CHARTMUSEUM_USERNAME }} --password ${{ secrets.CHARTMUSEUM_PASSWORD }} --kubeconfig ./kubeconfig.yaml