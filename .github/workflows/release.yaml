name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

env:
  SETUP_NODE_NODE_VERSION: 19.7
  SETUP_HELM_HELM_VERSION: v3.11.2

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Install dependencies
        run: |
          npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release -- --verbose --increment=${{ github.event.inputs.release_type }} --ci
      - name: Remember release version
        id: remember_release_version
        run: |
          echo "release_version=$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT
    outputs:
      release_version: ${{ steps.remember_release_version.outputs.release_version }}
  helm_package:
    name: Helm package
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ needs.release.outputs.release_version }}
          tarBall: true
      - name: Unpack release
        run: tar -xzf ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Remove tarball
        run: rm ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Move the files to the current directory
        run: |
          shopt -s dotglob
          mv ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/* ./
          shopt -u dotglob
          rm -rf ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Remember Helm chart version
        id: remember_helm_chart_version
        run: |
          echo "helm_chart_version=$(grep '^version:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Remember Helm chart name
        id: remember_helm_chart_name
        run: |
          echo "helm_chart_name=$(grep '^name:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Add ChartMuseum repository
        run: |
          helm repo add chartmuseum https://chartmuseum.github.io/charts
      - name: Add Twuni repository
        run: |
          helm repo add twuni https://helm.twun.io
      - name: Build Helm chart dependencies
        run: |
          helm dependency build helm/
      - name: Run Helm package
        run: |
          helm package helm/
      - name: Upload Helm chart
        uses: actions/upload-artifact@v3
        with:
          name: helm_chart
          path: ./${{ steps.remember_helm_chart_name.outputs.helm_chart_name }}-${{ steps.remember_helm_chart_version.outputs.helm_chart_version }}.tgz
    outputs:
      helm_chart_name: ${{ steps.remember_helm_chart_name.outputs.helm_chart_name }}
      helm_chart_version: ${{ steps.remember_helm_chart_version.outputs.helm_chart_version }}

  publish_helm_chart_to_chartmuseum:
    name: Publish Helm chart to ChartMuseum
    needs: [helm_package]
    runs-on: ubuntu-latest
    steps:
      - name: Download Helm chart
        uses: actions/download-artifact@v3
        with:
          name: helm_chart
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Add WÅ‚osiara.pl ChartMuseum repository
        run: |
          helm repo add wlosiara-pl-chartmuseum ${{ secrets.CHARTMUSEUM_URL }}
      - name: Install push-cm plugin for Helm
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push
      - name: Publish Helm chart to ChartMuseum
        run: |
          helm cm-push ${{ needs.helm_package.outputs.helm_chart_name }}-${{ needs.helm_package.outputs.helm_chart_version }}.tgz wlosiara-pl-chartmuseum --username=${{ secrets.CHARTMUSEUM_USERNAME }} --password=${{ secrets.CHARTMUSEUM_PASSWORD }}
    outputs:
      chart_version: ${{ needs.helm_package.outputs.helm_chart_version }}
  deploy_helm_chart_to_kubernetes:
    name: Deploy Helm chart to Kubernetes
    needs: [publish_helm_chart_to_chartmuseum]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Setup .kube/config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
      - name: Install apache2-utils
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2-utils
      - name: Deploy Helm chart to Kubernetes
        run: |
          helm upgrade --install ${{ github.event.repository.name }} ${{ github.event.repository.name }} --version=${{ needs.publish_helm_chart_to_chartmuseum.outputs.chart_version }} --namespace=default --repo=${{ secrets.CHARTMUSEUM_URL }} --username=${{ secrets.CHARTMUSEUM_USERNAME }} --password=${{ secrets.CHARTMUSEUM_PASSWORD }} --set=docker-registry.secrets.htpasswd=$(htpasswd -nbB '${{ secrets.DOCKER_REGISTRY_USERNAME }}' '${{ secrets.DOCKER_REGISTRY_PASSWORD }}' | tr -d '\n') --set=chartmuseum.env.secret.BASIC_AUTH_USER=${{ secrets.CHARTMUSEUM_USERNAME }} --set=chartmuseum.env.secret.BASIC_AUTH_PASS=${{ secrets.CHARTMUSEUM_PASSWORD }}
